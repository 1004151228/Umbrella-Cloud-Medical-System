package handle;import Keys.*;import javax.crypto.spec.SecretKeySpec;import javax.servlet.http.HttpSession;import java.io.File;import java.io.FileOutputStream;import java.io.IOException;import java.io.PrintStream;import java.math.BigInteger;import java.sql.*;public class HandleCompute extends javax.servlet.http.HttpServlet {    static final String JDBC_DRIVER = "com.mysql.jdbc.Driver";    static final String DB_URL = "jdbc:mysql://localhost:3306/web?useSSL=true";    static final String ACC = "root";    static final String PWD = "zxczxc";    protected void doPost(javax.servlet.http.HttpServletRequest request, javax.servlet.http.HttpServletResponse response) throws javax.servlet.ServletException, IOException {        doGet(request,response);    }    protected void doGet(javax.servlet.http.HttpServletRequest request, javax.servlet.http.HttpServletResponse response) throws javax.servlet.ServletException, IOException {        response.setContentType("text/html");        response.setCharacterEncoding("UTF-8");        Connection conn;        Statement stat;        ResultSet resultset;        File file = new File("/var/lib/tomcat8/webapps/ROOT/temp_file/temp.txt");        if(! file.exists()) file.createNewFile();        int size = 0;        BigInteger sum = null, multi = null;        String sql_return;        PrintStream ps = new PrintStream(new FileOutputStream(file));//********************************从session里获取密钥**********************************************        HttpSession session = request.getSession(false);        if(session==null)        {        	response.getWriter().println(0);//错误代码        	return;        }        Init_Keys Keys = (Init_Keys)session.getAttribute("Keys");        int id = (int)session.getAttribute("ID");        String hospital_table = String.valueOf(id);        Key k1 = Keys.getKey();        SecretKeySpec k2 = Keys.getKeyAes(); //****************************************************************************************//********************************使用密钥加密**********************************************        /*         * 接收三项信息：查询条件、具体的条件、需要计算的东西         * 查询条件有：身份证号、病种、主治医生         * 需要计算的有：年龄、病情持续时间、入院总花费         */        String option = request.getParameter("option");//获得筛选条件        String condition = request.getParameter("condition");//具体的条件内容        String result = request.getParameter("result");//获得要计算的内容        String resultPlus = result+"Plus";        String resultMult = result+"Mult";      //检索需要先对筛选条件加密（AES）        try {			condition = EncryptData.EncryptAes(k2, condition);		} catch (Exception e) {}      //情况1:对于条件为身份证号，单独检索（只有一项）        if(option.equals("id")) {            try{                Class.forName(JDBC_DRIVER);                conn = DriverManager.getConnection(DB_URL, ACC, PWD);                stat = conn.createStatement();                String query = "SELECT * FROM `"+hospital_table+"` WHERE " + option + "=\"" + condition + "\"";                resultset = stat.executeQuery(query);                while (resultset.next()) {                    sql_return = resultset.getNString(resultPlus);                    sum = new BigInteger(sql_return);                    sql_return = resultset.getNString(resultMult);                    multi = new BigInteger(sql_return);                }            } catch (Exception e) {}            size = 1;//            sum = new BigInteger(result);//            multi = new BigInteger(result);        }     //end      //情况2:其他情况需要云计算        /*         * 数据库检索：需要把检索到的内容放入临时的txt文件中         *         * select resultPlus from <Table> where option=condition         * select resultMulti from <Table> where option=condition         *         * 每条记录，每次连续放两行，第一行是全同态加法密文，第二行是全同态乘法密文         * 比如age－>agePlus,ageMulti，每组符合条件的都要连续放两行（记得分行、、）         *         */        else {            try {                Class.forName(JDBC_DRIVER);                conn = DriverManager.getConnection(DB_URL, ACC, PWD);                stat = conn.createStatement();                String query = "SELECT * FROM `"+hospital_table+"` WHERE " + option + "=\"" + condition + "\"";                resultset = stat.executeQuery(query);                while (resultset.next()) {                    sql_return = resultset.getString(resultPlus);                    ps.println(sql_return);                    sql_return = resultset.getString(resultMult);                    ps.println(sql_return);                }                ps.close();            } catch (Exception e) {}            //云计算            try {                size = CloudCompute.Count(file);//总共多少数据项                sum = CloudCompute.Add(file);                multi = CloudCompute.Multi(file);            } catch (Exception e) {}        }        //end//****************************************************************************************//********************************使用密钥解密**********************************************           /*           * 然后再把所有的结果用“＃@”分隔后返回就可以了           */        String sum_D = Encrypt.decryptionPlus(k1, sum).toString();        String multi_D = Encrypt.decryptionMulti(k1, multi).toString();        String avg_D = String.valueOf(Double.parseDouble(sum_D)/size);        //下载的url文件制作        file = new File("/var/lib/tomcat8/webapps/ROOT/temp_file/result.txt");        ps = new PrintStream(new FileOutputStream(file));        ps.println("Sum："+sum_D);        ps.println("Product："+multi_D);        ps.println("Average："+avg_D);        ps.close();        String returnMessage = sum_D+"#@"+multi_D+"#@"+avg_D;//****************************************************************************************        response.getWriter().print(returnMessage);//用这个返回给服务器信息    }}